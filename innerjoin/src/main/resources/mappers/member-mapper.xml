<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
  <!-- 원본 :  <resultMap type="memberResultSet" id="Member"> -->
  <!-- type , id 반대로 씀 -->
  
  <!-- 수정본 -->
  <resultMap id="memberResultSet"  type="Member">
  	<id property="memberId" column="MEMBER_ID"/>
  	<result property="memberPwd" column="MEMBER_PWD"/>
  	<result property="memberName" column="MEMBER_NAME"/>
  	<result property="loginWay" column="LOGIN_WAY"/>
  	<result property="memberModifyDate" column="MEMBER_MODIFY_DATE"/>
  	<result property="memberEnrollDate" column="MEMBER_ENROLL_DATE"/>
  	<result property="memberHostCount" column="MEMBER_HOST_COUNT"/>
  	<result property="memberJoinCount" column="MEMBER_JOIN_COUNT"/>
  	<result property="memberReptCount" column="MEMBER_REPT_COUNT"/>
  	<result property="memberProPath" column="MEMBER_PRO_PATH"/> 
  	<result property="memberStatusCode" column="MEMBER_STATUS_CODE"/>
  	<result property="memberIntroduce" column="MEMBER_INTRODUCE"/>
  	<result property="memberBirthday" column="MEMBER_BIRTHDAY"/>
  	<result property="memberGender" column="MEMBER_GENDER"/>
  	<result property="memberOpenStatus" column="MEMBER_OPEN_STATUS"/>
  </resultMap>
  
  
  <resultMap type="Group" id="groupResultSet">
		<id property="gNo" column="GROUP_NO"/>
		<result property="gHost" column="GROUP_HOST"/>
		<result property="gOpenStatus" column="GROUP_OPEN_STATUS"/>
		<result property="gName" column="GROUP_NAME"/>
		<result property="gLimit" column="GROUP_LIMIT"/>
		<result property="gInfo" column="GROUP_INFO"/>
		<result property="gMemCount" column="GROUP_MEM_COUNT"/>
		<result property="gEnrollDate" column="GROUP_ENROLL_DATE"/>
		<result property="localCode" column="LOCAL_CODE"/>
		<result property="gStatus" column="GROUP_STATUS"/>
		<result property="gCategoryCode" column="GROUP_CATEGORY_CODE"/>
		<result property="gReptCount" column="GROUP_REPT_COUNT"/>
		<result property="gOriginFileName" column="GROUP_ORIGIN_FILENAME"/>
		<result property="gRenameFileName" column="GROUP_RENAME_FILENAME"/>
	</resultMap>
	
	
  
  
  
  
	<!-- 		
	SELECT * FROM MEMBER
	WHERE MEMBER_ID = #{memberId} 
	AND MEMBER_STATUS_CODE != 3  -->
  
  <select id="loginMember" parameterType="Member" 
			resultMap="memberResultSet">
	SELECT *
	FROM MEMBER
	LEFT JOIN MEMBER_ADD_INFO USING(MEMBER_ID) 
	WHERE MEMBER_ID = #{memberId} 

	AND MEMBER_STATUS_CODE != 3 AND LOGIN_WAY = 'E'

  </select>
  
  <!-- 회원가입  -->
  <insert id="insertMember" parameterType="Member" >

  	INSERT INTO MEMBER
  	VALUES(
  		#{memberId}, #{memberPwd}, #{memberName}, 'E'
  		,SYSDATE, SYSDATE, DEFAULT, DEFAULT, DEFAULT, DEFAULT, 1
  	)

  </insert>

  <insert id="insertAddInfo" parameterType="Member">
  	INSERT INTO
  		MEMBER_ADD_INFO
  		VALUES(
  			#{memberId}, null, #{memberBirthday}, #{memberGender}, 'N'
  		)
  </insert>  
  
    <!-- 회원정보 수정-->
  <update id="updateInfo" parameterType="Member">
  	UPDATE MEMBER
  	SET 
  	<if test='memberPwd.equals("")'>
  	MEMBER_PWD = #{memberPwd},
  	</if>
  	MEMBER_NAME = #{memberName}
  	WHERE MEMBER_ID = #{memberId}
  </update>
  
  <!-- 회원 정보수정 (생년월일, 성별 추가입력) -->
  <update id="updateAddInfo" parameterType="map">
	UPDATE MEMBER_ADD_INFO
	SET MEMBER_BIRTHDAY= #{memberBirthday},
	MEMBER_GENDER = #{memberGender}
	WHERE MEMBER_ID= #{memberId}
  </update>
  
  <!-- email 중복체크 -->
  <select id="checkIdDup" parameterType="string" resultType="_int">
  	SELECT COUNT(*)
  	FROM MEMBER
  	WHERE MEMBER_ID = #{memberId}
  </select>
  
  <!-- 닉네임 중복 체크 -->
  <select id="checkNameDup" parameterType="string" resultType="_int">
  	SELECT COUNT(*)
  	FROM MEMBER
  	WHERE MEMBER_NAME = #{memberName}
  </select>
  
  <!-- 내 모임 목록 갯수 -->
  <select id="groupCount" parameterType="Member"  resultType="_int">
  	SELECT MEMBER_JOIN_COUNT
  	FROM MEMBER
  	WHERE MEMBER_ID= #{memberId}
  </select>
  
  <!-- 내 목록 조회 -->
  <select id="selectList" parameterType="Member" resultMap="groupResultSet">
  	SELECT *
	FROM GROUP_MEMBER
	JOIN "GROUP" USING(GROUP_NO) 
	WHERE MEMBER_ID = #{memberId}
	AND GROUP_STATUS != 2
	AND LEVEL_CODE != 3
	AND LEVEL_CODE != 4 
  </select>
  
  <!-- 초대받은 모임 목록 -->
  <select id="selectInvList" parameterType="Member" resultMap="groupResultSet">
  	SELECT *
	FROM GROUP_MEMBER
	JOIN "GROUP" USING(GROUP_NO) 
	WHERE MEMBER_ID = #{memberId}
	AND GROUP_STATUS != 2
    AND LEVEL_CODE = 3
  </select>
  
  <!-- 신청 목록 -->
  <select id="selectWaitList" parameterType="Member" resultMap="groupResultSet">
  	SELECT *
	FROM GROUP_MEMBER
	JOIN "GROUP" USING(GROUP_NO) 
	WHERE MEMBER_ID = #{memberId}
	AND GROUP_STATUS != 2
    AND LEVEL_CODE = 4
  </select>
  
  <!-- 초대 거절 -->
  <delete id="deleteInv" parameterType="map">
  	DELETE FROM GROUP_MEMBER 
    WHERE MEMBER_ID = #{memberId}
    AND GROUP_NO = #{gNo}
    AND LEVEL_CODE = 3
  </delete>
  
  <!-- 초대 수락 -->
  <update id="updateInv" parameterType="map">
  	UPDATE GROUP_MEMBER 
  	SET LEVEL_CODE = 2
  	WHERE MEMBER_ID = #{memberId}
  	AND GROUP_NO = #{gNo}
  </update>
  
  <!-- 모임 신청 취소 -->
  <delete id="deleteWait" parameterType="map">
  	DELETE FROM GROUP_MEMBER 
    WHERE MEMBER_ID = #{memberId}
    AND GROUP_NO = #{gNo}
    AND LEVEL_CODE = 4
    AND GROUP_STATUS != 2
  </delete>
  
  
  <!-- 회원 탈퇴 -->
  <update id="deleteMember" parameterType="Member">
  	UPDATE MEMBER
  	SET MEMBER_STATUS_CODE = 3
  	WHERE MEMBER_ID = #{memberId}
  </update>
  
  <!-- 구글아이디 회원가입 여부 -->
  <select id="googleJoined" parameterType="string" resultType="string">
  	SELECT LOGIN_WAY
  	FROM MEMBER
  	WHERE MEMBER_ID = #{memberId}
  </select>
  
  <!-- 구글아이디 회원가입 -->
  <insert id="googleJoin" parameterType="Member">
   	INSERT INTO MEMBER
  	VALUES(
  		#{memberId}, '-1', #{memberName}, 'G'
  		,SYSDATE, SYSDATE, DEFAULT, DEFAULT, DEFAULT, #{memberProPath}, 1
  	)
  </insert>
  
  
  <!-- 구글아이디로 로그인 -->
  <select id="googleLogin" parameterType="String" resultMap="memberResultSet">
  	SELECT * FROM MEMBER
	WHERE MEMBER_ID = #{memberId} 
	AND MEMBER_STATUS_CODE != 3 AND LOGIN_WAY = 'G'
  </select>
  
  <select id="getOriginFileName" parameterType="String" resultType="String">
  	SELECT MEMBER_PRO_PATH FROM MEMBER
  	WHERE MEMBER_ID = #{memberId} 
  </select>
  
  <update id="updateProfile" parameterType="Member">
  	UPDATE MEMBER SET 
  	<if test="memberProPath != null">
  	MEMBER_PRO_PATH = #{memberProPath} 
  	</if>
	WHERE MEMBER_ID = #{memberId} 
  </update>
  
  <update id="updateProfileAdd" parameterType="Member">
  	UPDATE MEMBER_ADD_INFO SET
	MEMBER_INTRODUCE = #{memberIntroduce}
	<!-- MEMBER_OPEN_STATUS = #{memberOpenStatus} -->
	WHERE MEMBER_ID = #{memberId}
  </update>
  
  <select id="getMember" parameterType="Member" resultMap="memberResultSet">
  	SELECT * FROM MEMBER 
	LEFT JOIN MEMBER_ADD_INFO USING(MEMBER_ID) 
  	WHERE MEMBER_ID = #{memberId} 
  </select>
  
  <!-- 모임장이름으로 모임장아이디 가져오기 -->
  
  <select id="selectReceiverId" parameterType="String" resultType="String">
  	
  	SELECT MEMBER_ID
  	FROM MEMBER
  	WHERE MEMBER_NAME = #{reciverName}
  
  </select>
  
  
  <!-- 특정 아이디로 멤버 정보 가져오기 -->
  <select id="selectMemberInfo" parameterType="string" resultMap="memberResultSet">
  	SELECT * FROM MEMBER WHERE MEMBER_ID = #{memberId}
  	
  </select>
  
</mapper>
